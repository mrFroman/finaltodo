{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\mrfro\\\\Desktop\\\\finaltodo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport { makeAutoObservable } from \"mobx\";\nimport { nanoid } from \"nanoid\";\n\nvar TodosState = function TodosState() {\n  var _this = this;\n\n  _classCallCheck(this, TodosState);\n\n  this.todos = [{\n    id: \"todo-0\",\n    name: \"поесть\",\n    completed: true\n  }, {\n    id: \"todo-1\",\n    name: \"поспать\",\n    completed: false\n  }, {\n    id: \"todo-2\",\n    name: \"Reдень суркаpeat\",\n    completed: false\n  }];\n  this.filter = \"All\";\n  this.newTodoName = \"\";\n\n  this.setFilter = function (filter) {\n    _this.filter = filter;\n  };\n\n  this.addTask = function (name) {\n    var newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    };\n    todosState.todos.push(newTask);\n  };\n\n  this.handleSubmit = function (e) {\n    e.preventDefault();\n    var newTodoName = _this.newTodoName;\n\n    if (!newTodoName.trim()) {\n      return;\n    }\n\n    _this.addTask(newTodoName);\n\n    _this.newTodoName = \"\";\n  };\n\n  this.handleNewTodoNameChange = function (e) {\n    _this.newTodoName = e.target.value;\n  };\n\n  this.toggleTaskCompleted = function (task) {\n    task.completed = !task.completed;\n  };\n\n  this.deleteTask = function (taskToRemove) {\n    todosState.todos = todosState.todos.filter(function (task) {\n      return task !== taskToRemove;\n    });\n  };\n\n  this.editTask = function (task, newName) {\n    task.name = newName;\n  };\n\n  makeAutoObservable(this);\n};\n\nexport var todosState = new TodosState();","map":{"version":3,"sources":["C:/Users/mrfro/Desktop/finaltodo/src/todoState.js"],"names":["makeAutoObservable","nanoid","TodosState","todos","id","name","completed","filter","newTodoName","setFilter","addTask","newTask","todosState","push","handleSubmit","e","preventDefault","trim","handleNewTodoNameChange","target","value","toggleTaskCompleted","task","deleteTask","taskToRemove","editTask","newName"],"mappings":";AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,SAASC,MAAT,QAAuB,QAAvB;;IAEMC,U,GASJ,sBAAc;AAAA;;AAAA;;AAAA,OARdC,KAQc,GARN,CACN;AAAEC,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,IAAI,EAAE,QAAtB;AAAgCC,IAAAA,SAAS,EAAE;AAA3C,GADM,EAEN;AAAEF,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,IAAI,EAAE,SAAtB;AAAiCC,IAAAA,SAAS,EAAE;AAA5C,GAFM,EAGN;AAAEF,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,IAAI,EAAE,kBAAtB;AAA0CC,IAAAA,SAAS,EAAE;AAArD,GAHM,CAQM;AAAA,OAHdC,MAGc,GAHL,KAGK;AAAA,OAFdC,WAEc,GAFA,EAEA;;AAAA,OAIdC,SAJc,GAIF,UAACF,MAAD,EAAY;AACtB,IAAA,KAAI,CAACA,MAAL,GAAcA,MAAd;AACD,GANa;;AAAA,OAQdG,OARc,GAQJ,UAACL,IAAD,EAAU;AAClB,QAAMM,OAAO,GAAG;AAAEP,MAAAA,EAAE,EAAE,UAAUH,MAAM,EAAtB;AAA0BI,MAAAA,IAAI,EAAEA,IAAhC;AAAsCC,MAAAA,SAAS,EAAE;AAAjD,KAAhB;AACAM,IAAAA,UAAU,CAACT,KAAX,CAAiBU,IAAjB,CAAsBF,OAAtB;AACD,GAXa;;AAAA,OAadG,YAbc,GAaC,UAACC,CAAD,EAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAQR,WAAR,GAAwB,KAAxB,CAAQA,WAAR;;AAEA,QAAI,CAACA,WAAW,CAACS,IAAZ,EAAL,EAAyB;AACvB;AACD;;AACD,IAAA,KAAI,CAACP,OAAL,CAAaF,WAAb;;AACA,IAAA,KAAI,CAACA,WAAL,GAAmB,EAAnB;AACD,GAtBa;;AAAA,OAwBdU,uBAxBc,GAwBY,UAACH,CAAD,EAAO;AAC/B,IAAA,KAAI,CAACP,WAAL,GAAmBO,CAAC,CAACI,MAAF,CAASC,KAA5B;AACD,GA1Ba;;AAAA,OA4BdC,mBA5Bc,GA4BQ,UAACC,IAAD,EAAU;AAC9BA,IAAAA,IAAI,CAAChB,SAAL,GAAiB,CAACgB,IAAI,CAAChB,SAAvB;AACD,GA9Ba;;AAAA,OAgCdiB,UAhCc,GAgCD,UAACC,YAAD,EAAkB;AAC7BZ,IAAAA,UAAU,CAACT,KAAX,GAAmBS,UAAU,CAACT,KAAX,CAAiBI,MAAjB,CAAwB,UAACe,IAAD;AAAA,aAAUA,IAAI,KAAKE,YAAnB;AAAA,KAAxB,CAAnB;AACD,GAlCa;;AAAA,OAoCdC,QApCc,GAoCH,UAACH,IAAD,EAAOI,OAAP,EAAmB;AAC5BJ,IAAAA,IAAI,CAACjB,IAAL,GAAYqB,OAAZ;AACD,GAtCa;;AACZ1B,EAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,C;;AAuCH,OAAO,IAAMY,UAAU,GAAG,IAAIV,UAAJ,EAAnB","sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass TodosState {\r\n  todos = [\r\n    { id: \"todo-0\", name: \"поесть\", completed: true },\r\n    { id: \"todo-1\", name: \"поспать\", completed: false },\r\n    { id: \"todo-2\", name: \"Reдень суркаpeat\", completed: false }\r\n  ];\r\n  filter = \"All\";\r\n  newTodoName = \"\";\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setFilter = (filter) => {\r\n    this.filter = filter;\r\n  };\r\n\r\n  addTask = (name) => {\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n    todosState.todos.push(newTask);\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { newTodoName } = this;\r\n\r\n    if (!newTodoName.trim()) {\r\n      return;\r\n    }\r\n    this.addTask(newTodoName);\r\n    this.newTodoName = \"\";\r\n  };\r\n\r\n  handleNewTodoNameChange = (e) => {\r\n    this.newTodoName = e.target.value;\r\n  };\r\n\r\n  toggleTaskCompleted = (task) => {\r\n    task.completed = !task.completed;\r\n  };\r\n\r\n  deleteTask = (taskToRemove) => {\r\n    todosState.todos = todosState.todos.filter((task) => task !== taskToRemove);\r\n  };\r\n\r\n  editTask = (task, newName) => {\r\n    task.name = newName;\r\n  };\r\n}\r\n\r\nexport const todosState = new TodosState();\r\n"]},"metadata":{},"sourceType":"module"}